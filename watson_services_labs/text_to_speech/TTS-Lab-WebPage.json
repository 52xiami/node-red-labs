[
  {
    "id": "c31154b8.b0e548",
    "type": "change",
    "name": "text to payload",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "to": "msg.payload.text_to_say"
      },
      {
        "t": "set",
        "p": "text_to_say",
        "to": "msg.payload"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 430,
    "y": 97,
    "wires": [
      [
        "63b63231.c82da4"
      ]
    ]
  },
  {
    "id": "166ae64d.87f25a",
    "type": "http in",
    "name": "",
    "url": "\/talk",
    "method": "get",
    "swaggerDoc": "",
    "x": 62,
    "y": 318,
    "wires": [
      [
        "cb9e341e.96131"
      ]
    ]
  },
  {
    "id": "cb9e341e.96131",
    "type": "switch",
    "name": "check text",
    "property": "payload.text_to_say",
    "rules": [
      {
        "t": "nnull"
      },
      {
        "t": "else"
      }
    ],
    "checkall": "false",
    "outputs": 2,
    "x": 224,
    "y": 317,
    "wires": [
      [
        "7435b98d.6e4e2"
      ],
      [
        "d6938af7.b96f48"
      ]
    ]
  },
  {
    "id": "d6938af7.b96f48",
    "type": "template",
    "name": "GetTextToSay",
    "field": "payload",
    "format": "html",
    "template": "<h1>Enter text to Say<\/h1>\n<form action=\"{{req._parsedUrl.pathname}}\" method=\"get\">\n    <input type=\"text\" name=\"text_to_say\" id=\"\" value=\"{{payload.text_to_say}}\" \/>\n    <input type=\"submit\" value=\"Say it!\"\/>\n<\/form>",
    "x": 483,
    "y": 357,
    "wires": [
      [
        "f550e390.09b6f8"
      ]
    ]
  },
  {
    "id": "f550e390.09b6f8",
    "type": "http response",
    "name": "Reply",
    "x": 785,
    "y": 285,
    "wires": [
      
    ]
  },
  {
    "id": "d6f68908.d37d9",
    "type": "template",
    "name": "Generate Reply",
    "field": "payload",
    "format": "html",
    "template": "<h1>You want to say<\/h1>\n<p><q>{{payload}}<\/q><\/p>\n<p>Hear it:<\/p>\n<audio controls autoplay>\n  <source src=\"{{req._parsedUrl.pathname}}\/sayit?text_to_say={{payload}}\" type=\"audio\/wav\">\nYour browser does not support the audio element.\n<\/audio>\n<p>Thanks!<\/p>\n<form action=\"{{req._parsedUrl.pathname}}\">\n    <input type=\"text\" name=\"text_to_say\" id=\"\" value=\"{{payload}}\" \/>\n    <input type=\"submit\" value=\"Try Again\" \/>\n<\/form>",
    "x": 589,
    "y": 277,
    "wires": [
      [
        "f550e390.09b6f8"
      ]
    ]
  },
  {
    "id": "779a0a4a.ea2974",
    "type": "http in",
    "name": "",
    "url": "\/talk\/sayit",
    "method": "get",
    "swaggerDoc": "",
    "x": 78,
    "y": 136,
    "wires": [
      [
        "70256ec3.146ad"
      ]
    ]
  },
  {
    "id": "63dcba1b.386c34",
    "type": "http response",
    "name": "Reply Speech binary",
    "x": 888,
    "y": 207,
    "wires": [
      
    ]
  },
  {
    "id": "7435b98d.6e4e2",
    "type": "change",
    "name": "Extract",
    "rules": [
      {
        "t": "set",
        "p": "filename",
        "to": "msg.payload.text_to_file"
      },
      {
        "t": "set",
        "p": "payload",
        "to": "msg.payload.text_to_say"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 398,
    "y": 277,
    "wires": [
      [
        "d6f68908.d37d9"
      ]
    ]
  },
  {
    "id": "63b63231.c82da4",
    "type": "watson-text-to-speech",
    "name": "",
    "lang": "english",
    "voice": "en-US_AllisonVoice",
    "x": 547,
    "y": 36,
    "wires": [
      [
        "b900ff3f.cf41"
      ]
    ]
  },
  {
    "id": "70256ec3.146ad",
    "type": "switch",
    "name": "Check text",
    "property": "payload.text_to_say",
    "rules": [
      {
        "t": "nnull"
      },
      {
        "t": "else"
      }
    ],
    "checkall": "true",
    "outputs": 2,
    "x": 255,
    "y": 143,
    "wires": [
      [
        "c31154b8.b0e548"
      ],
      [
        "93410b6a.46b21"
      ]
    ]
  },
  {
    "id": "93410b6a.46b21",
    "type": "template",
    "name": "Error",
    "field": "payload",
    "format": "handlebars",
    "template": "<h1>\nError:    No f or text_to_say query parameter\n<\/h1>",
    "x": 394,
    "y": 190,
    "wires": [
      [
        "63dcba1b.386c34"
      ]
    ]
  },
  {
    "id": "b900ff3f.cf41",
    "type": "change",
    "name": "Speech to payload",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "to": "msg.speech"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 666,
    "y": 97,
    "wires": [
      [
        "b8147a54.f6a0b"
      ]
    ]
  },
  {
    "id": "b8147a54.f6a0b",
    "type": "function",
    "name": "Set headers",
    "func": "\/\/ Set the content type to audio wave\nmsg.headers={ 'Content-Type': 'audio\/wav'};\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 727,
    "y": 151,
    "wires": [
      [
        "63dcba1b.386c34"
      ]
    ]
  }
]